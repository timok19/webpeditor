"""
This type stub file was generated by pyright.
"""

from typing import Any, Dict
from aiocache.base import BaseCache

class SimpleMemoryBackend(BaseCache):
    """
    Wrapper around dict operations to use it as a cache backend
    """
    def __init__(self, **kwargs: Any) -> None: ...

class SimpleMemoryCache(SimpleMemoryBackend):
    """
    Memory cache implementation with the following components as defaults:
        - serializer: :class:`aiocache.serializers.NullSerializer`
        - plugins: None

    Config options are:

    :param serializer: obj derived from :class:`aiocache.serializers.BaseSerializer`.
    :param plugins: list of :class:`aiocache.plugins.BasePlugin` derived classes.
    :param namespace: string to use as default prefix for the key used in all operations of
        the backend. Default is None.
    :param timeout: int or float in seconds specifying maximum timeout for the operations to last.
        By default its 5.
    """

    NAME: str = ...
    def __init__(self, serializer: Any = ..., **kwargs: Any) -> None: ...
    @classmethod
    def parse_uri_path(cls, path: str) -> Dict[str, Any]: ...
