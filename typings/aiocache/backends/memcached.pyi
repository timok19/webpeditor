"""
This type stub file was generated by pyright.
"""

from typing import Any, Dict
from aiocache.base import BaseCache

class MemcachedBackend(BaseCache):
    def __init__(self, endpoint: str = ..., port: int = ..., pool_size: int = ..., **kwargs: Any) -> None:
        ...
    


class MemcachedCache(MemcachedBackend):
    """
    Memcached cache implementation with the following components as defaults:
        - serializer: :class:`aiocache.serializers.JsonSerializer`
        - plugins: []

    Config options are:

    :param serializer: obj derived from :class:`aiocache.serializers.BaseSerializer`.
    :param plugins: list of :class:`aiocache.plugins.BasePlugin` derived classes.
    :param namespace: string to use as default prefix for the key used in all operations of
        the backend. Default is None
    :param timeout: int or float in seconds specifying maximum timeout for the operations to last.
        By default its 5.
    :param endpoint: str with the endpoint to connect to. Default is 127.0.0.1.
    :param port: int with the port to connect to. Default is 11211.
    :param pool_size: int size for memcached connections pool. Default is 2.
    """
    NAME: str = ...
    def __init__(self, serializer: Any = ..., **kwargs: Any) -> None:
        ...
    
    @classmethod
    def parse_uri_path(cls, path: str) -> Dict[str, Any]:
        ...
    
    def __repr__(self) -> str:
        ...
    


